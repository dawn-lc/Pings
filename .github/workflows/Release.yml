name: Release
on:
  push:
    branches: 
      - master
    paths:
      - '*.cs'
      - '*.csproj'
      - '*.sln'
      - '*.yml'
      - '.github/workflows/*.yml'
jobs:
  build:
    if: github.actor != 'github-actions'
    strategy:
      matrix:
        configuration: [Release]
    runs-on: windows-latest
    env:
      Project_Name: Pings
      Solution_Name: Pings.sln
      Release_Tag: latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
 
    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Set git config
      run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com
        New-Item -Path "./build/" -ItemType Directory -Force
        New-Item -Path "./.git/gitversion_cache" -ItemType Directory -Force
        if (Test-Path -Path "./build/config.json") { $config = Get-Content -Path "./build/config.json" -Raw | ConvertFrom-Json; }

    - name: Move GitVersion cache to cache
      run: if (Test-Path -Path "./build/config.json") { Move-Item -Path "./build/gitversion.json" -Destination "./.git/gitversion_cache/$config.GitVersion.Name" -Force }

    - name: Install GitVersion
      run: dotnet tool install -g GitVersion.Tool

    - name: Add GitVersion to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Use GitVersion
      id: gitversion
      run: dotnet-gitversion /output buildserver /config GitVersion.yml

    - name: Publish Windows Binaries
      run: dotnet publish ./${{ env.Project_Name }}.csproj -r win-x64 -c Release --output ./publish/

    - name: Create Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ env.Release_Tag }}"
        prerelease: false
        title: "${{ env.GitVersion_SemVer }}"
        files: ./publish/${{ env.Project_Name }}.exe

    
    - name: Move GitVersion cache to build
      run: |
        $gitversion=Get-ChildItem -Path "./.git/gitversion_cache/" -File | Sort-Object LastWriteTime -Descending | Select-Object -First 1;
        $config = @{ GitVersion = @{ Name = $gitversion.Name } };
        $config | ConvertTo-Json -Depth 8 | Set-Content -Path "./build/config.json"
        Move-Item -Path $gitversion.FullName -Destination "./build/gitversion.json" -Force

    - name: Save Changes
      run: |
        git add .
        git commit --amend --no-edit
        git push --force