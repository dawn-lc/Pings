name: Release
on:
  push:
    branches: 
      - master
    paths:
      - '*.cs'
      - '*.csproj'
      - '*.sln'
      - '*.yml'
jobs:
  build:
    if: github.actor != 'github-actions'
    strategy:
      matrix:
        configuration: [Release]
    runs-on: windows-latest
    env:
      Solution_Name: Pings.sln
      release_tag: latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Install GitVersion
      run: dotnet tool install -g GitVersion.Tool

    - name: Use GitVersion
      run: gitversion /output json /output buildserver
      id: gitversion
      env:
        GITVERSION_JSON: ${{ steps.gitversion.outputs.json }}

    - name: Extract GitVersion variables
      id: extract_variables
      run: |
        echo "##[set-output name=Version;]$(echo ${{ steps.gitversion.outputs.json }} | jq -r .SemVer)"
        echo "##[set-output name=AssemblySemVer;]$(echo ${{ steps.gitversion.outputs.json }} | jq -r .AssemblySemVer)"
        echo "##[set-output name=FileSemVer;]$(echo ${{ steps.gitversion.outputs.json }} | jq -r .FileSemVer)"
        echo "##[set-output name=FullSemVer;]$(echo ${{ steps.gitversion.outputs.json }} | jq -r .FullSemVer)"
        echo "##[set-output name=InformationalVersion;]$(echo ${{ steps.gitversion.outputs.json }} | jq -r .InformationalVersion)"
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release
    
    - name: Publish
      run: dotnet publish -r win-x64 -c Release --output ./publish
    
    - name: 发布新版本
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ env.release_tag }}"
        prerelease: false
        title: "${{ steps.extract_variables.outputs.FileSemVer }}"
        files: 。/publish/Pings.exe
